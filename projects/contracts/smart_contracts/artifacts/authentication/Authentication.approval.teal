#pragma version 10

smart_contracts.authentication.contract.Authentication.approval_program:
    txn ApplicationID
    bnz main_entrypoint@2
    callsub __init__

main_entrypoint@2:
    callsub __puya_arc4_router__
    return


// smart_contracts.authentication.contract.Authentication.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@8
    method "update()bool"
    method "delete()bool"
    method "create_algo_id(string,string,string)uint64"
    method "tranfer_algo_id_token(asset,address)bool"
    txna ApplicationArgs 0
    match __puya_arc4_router___update_route@2 __puya_arc4_router___delete_route@3 __puya_arc4_router___create_algo_id_route@4 __puya_arc4_router___tranfer_algo_id_token_route@5
    int 0
    retsub

__puya_arc4_router___update_route@2:
    txn OnCompletion
    int UpdateApplication
    ==
    assert // OnCompletion is UpdateApplication
    txn ApplicationID
    assert // is not creating
    callsub update
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___delete_route@3:
    txn OnCompletion
    int DeleteApplication
    ==
    assert // OnCompletion is DeleteApplication
    txn ApplicationID
    assert // is not creating
    callsub delete
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___create_algo_id_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    callsub create_algo_id
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___tranfer_algo_id_token_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Assets
    txna ApplicationArgs 2
    callsub tranfer_algo_id_token
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@8:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@12
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@12:
    int 0
    retsub


// smart_contracts.authentication.contract.Authentication.update() -> uint64:
update:
    proto 0 1
    int 0
    byte "admins"
    app_global_get_ex
    assert // check self.admins exists
    int 0
    extract_uint16
    bz update_after_for@3
    int 0
    byte "admins"
    app_global_get_ex
    assert // check self.admins exists
    extract 2 0
    extract 0 32 // on error: Index access is out of bounds
    txn Sender
    ==
    retsub

update_after_for@3:
    int 0
    retsub


// smart_contracts.authentication.contract.Authentication.delete() -> uint64:
delete:
    proto 0 1
    int 0
    byte "admins"
    app_global_get_ex
    assert // check self.admins exists
    int 0
    extract_uint16
    bz delete_after_for@3
    int 0
    byte "admins"
    app_global_get_ex
    assert // check self.admins exists
    extract 2 0
    extract 0 32 // on error: Index access is out of bounds
    txn Sender
    ==
    retsub

delete_after_for@3:
    int 0
    retsub


// smart_contracts.authentication.contract.Authentication.create_algo_id(unit_name: bytes, full_name: bytes, metadata_url: bytes) -> bytes:
create_algo_id:
    proto 3 1
    frame_dig -1
    extract 2 0
    frame_dig -3
    extract 2 0
    frame_dig -2
    extract 2 0
    global CurrentApplicationAddress
    dupn 3
    itxn_begin
    itxn_field ConfigAssetClawback
    itxn_field ConfigAssetFreeze
    itxn_field ConfigAssetReserve
    itxn_field ConfigAssetManager
    itxn_field ConfigAssetName
    itxn_field ConfigAssetUnitName
    itxn_field ConfigAssetURL
    int 1
    itxn_field ConfigAssetTotal
    int acfg
    itxn_field TypeEnum
    int 1000
    itxn_field Fee
    itxn_submit
    itxn CreatedAssetID
    itob
    retsub


// smart_contracts.authentication.contract.Authentication.tranfer_algo_id_token(asset: uint64, user_address: bytes) -> uint64:
tranfer_algo_id_token:
    proto 2 1
    itxn_begin
    int 1
    itxn_field AssetAmount
    frame_dig -1
    itxn_field AssetReceiver
    frame_dig -2
    itxn_field XferAsset
    int axfer
    itxn_field TypeEnum
    int 1000
    itxn_field Fee
    itxn_submit
    itxn_begin
    int 1
    itxn_field FreezeAssetFrozen
    frame_dig -2
    itxn_field FreezeAsset
    frame_dig -1
    itxn_field FreezeAssetAccount
    int afrz
    itxn_field TypeEnum
    int 1000
    itxn_field Fee
    itxn_submit
    int 1
    retsub


// smart_contracts.authentication.contract.Authentication.__init__() -> void:
__init__:
    proto 0 0
    byte "admins"
    byte 0x0000
    app_global_put
    int 0
    byte "admins"
    app_global_get_ex
    assert // check self.admins exists
    extract 2 0
    txn Sender
    concat
    dup
    len
    int 32
    /
    itob
    extract 6 2
    swap
    concat
    byte "admins"
    swap
    app_global_put
    retsub
